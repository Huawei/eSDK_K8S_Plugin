apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller
  namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-backend-controller-role
  labels:
    provisioner: csi.huawei.com
rules:
  - apiGroups: [ "admissionregistration.k8s.io" ]
    resources: [ "validatingwebhookconfigurations" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps", "secrets", "events" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "xuanwu.huawei.io" ]
    resources: [ "storagebackendclaims", "storagebackendclaims/status", "storagebackendcontents",
                 "storagebackendcontents/status" ]
    verbs: [ "create", "get", "list", "watch", "update", "delete" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-backend-controller-binding
  labels:
    app: xuanwu-volume-service
    provisioner: csi.huawei.com
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
roleRef:
  kind: ClusterRole
  name: storage-backend-controller-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-backend-sidecar-role
  labels:
    provisioner: csi.huawei.com
rules:
  - apiGroups: [ "" ]
    resources: [ "events", "configmaps" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "create", "get", "update", "delete" ]
  - apiGroups: [ "xuanwu.huawei.io" ]
    resources: [ "storagebackendcontents", "storagebackendcontents/status" ]
    verbs: [ "get", "list", "watch", "update" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: storage-backend-sidecar-binding
  labels:
    app: xuanwu-volume-service
    provisioner: csi.huawei.com
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
roleRef:
  kind: ClusterRole
  name: storage-backend-sidecar-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-cfg
  namespace: huawei-csi
rules:
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get","watch","list","delete","update","create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-role-cfg
  namespace: huawei-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-attacher-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-cfg
  namespace: huawei-csi
rules:
  - apiGroups: [ "" ]
    resources: [ "endpoints" ]
    verbs: [ "get","watch","list","delete","update","create" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get","watch","list","delete","update","create" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csistoragecapacities" ]
    verbs: [ "get","list","watch","create","update","patch","delete" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get" ]
  - apiGroups: [ "apps" ]
    resources: [ "replicasets" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-role-cfg
  namespace: huawei-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-provisioner-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get","list","watch","create","delete","update" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get","list","watch","update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses","csinodes" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list","watch","create","update","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshots","volumesnapshotcontents" ]
    verbs: [ "get","list" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get","list","watch","update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-provisioner-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-provisioner-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get","list","watch","patch","update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get","list","watch","patch","update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments/status" ]
    verbs: [ "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-attacher-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-attacher-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-resizer-cfg
  namespace: huawei-csi
rules:
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get","watch","list","delete","update","create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-resizer-role-cfg
  namespace: huawei-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: huawei-csi-resizer-cfg
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-resizer-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get","list","watch","patch","update" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims","pods" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims/status" ]
    verbs: [ "patch","update" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list","watch","create","update","patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-resizer-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-resizer-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshotter-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list","watch","create","update","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create","get","list","watch","update","delete","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "update","patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-csi-snapshotter-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-snapshotter-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshot-controller-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes","nodes" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get","list","watch","update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list","watch","create","update","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get","list","watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create","get","list","watch","update","delete","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshots" ]
    verbs: [ "get","list","watch","update","patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshots/status" ]
    verbs: [ "update","patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-snapshot-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-snapshot-controller-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: huawei-csi-controller-runner
subjects:
  - kind: ServiceAccount
    name: huawei-csi-controller
    namespace: huawei-csi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    provisioner: csi.huawei.com
  name: huawei-csi-controller
  namespace: huawei-csi
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: huawei-csi-controller
      provisioner: csi.huawei.com
  template:
    metadata:
      labels:
        app: huawei-csi-controller
        provisioner: csi.huawei.com
    spec:
      hostNetwork: true
      serviceAccount: huawei-csi-controller
      containers:
        - name: liveness-probe
          args:
            - "--csi-address=/csi/csi.sock"
            - "--health-port=9808"
          image: registry.k8s.io/sig-storage/livenessprobe:v2.12.0
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 128Mi
        - name: csi-provisioner
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=6h"
            - "--extra-create-metadata=true"
            - "--volume-name-prefix=pvc"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.6.0
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: csi-attacher
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: registry.k8s.io/sig-storage/csi-attacher:v4.4.0
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: csi-resizer
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--handle-volume-inuse-error=false"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: registry.k8s.io/sig-storage/csi-resizer:v1.9.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: csi-snapshotter
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          image: registry.k8s.io/sig-storage/csi-snapshotter:v6.3.0
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: snapshot-controller
          args:
            - "--v=5"
            - "--leader-election"
          image: registry.k8s.io/sig-storage/snapshot-controller:v6.3.0
          imagePullPolicy: "IfNotPresent"
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: storage-backend-controller
          image: storage-backend-controller:{{csi-version}}
          imagePullPolicy: "IfNotPresent"
          env:
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          args:
            - "--logging-module=file"
            - "--log-level=info"
            - "--log-file-dir=/var/log/huawei"
            - "--log-file-size=20M"
            - "--max-backups=9"
            - "--web-hook-port=4433"
            - "--web-hook-address=$(POD_IP)"
            - "--enable-leader-election=true"
            - "--leader-lease-duration=8s"
            - "--leader-renew-deadline=6s"
            - "--leader-retry-period=2s"
          ports:
            - containerPort: 4433
          volumeMounts:
            - mountPath: /var/log
              name: log
            - mountPath: /etc/localtime
              name: host-time
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: storage-backend-sidecar
          image: storage-backend-sidecar:{{csi-version}}
          imagePullPolicy: "IfNotPresent"
          env:
            - name: DRCSI_ENDPOINT
              value: /csi/dr-csi.sock
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          args:
            - "--logging-module=file"
            - "--log-level=info"
            - "--log-file-dir=/var/log/huawei"
            - "--log-file-size=20M"
            - "--max-backups=9"
            - "--backend-update-interval=60"
            - "--dr-endpoint=$(DRCSI_ENDPOINT)"
            - "--enable-leader-election=true"
            - "--leader-lease-duration=8s"
            - "--leader-renew-deadline=6s"
            - "--leader-retry-period=2s"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/log
              name: log
            - mountPath: /etc/localtime
              name: host-time
          resources:
            limits:
              cpu: 300m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 128Mi
        - name: huawei-csi-driver
          image: huawei-csi:{{csi-version}}
          imagePullPolicy: "IfNotPresent"
          args:
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--dr-endpoint=$(DRCSI_ENDPOINT)"
            - "--controller"
            - "--backend-update-interval=60"
            - "--driver-name=csi.huawei.com"
            - "--logging-module=file"
            - "--log-level=info"
            - "--volume-name-prefix=pvc"
            - "--log-file-dir=/var/log/huawei"
            - "--log-file-size=20M"
            - "--max-backups=9"
          env:
            - name: CSI_ENDPOINT
              value: /csi/csi.sock
            - name: DRCSI_ENDPOINT
              value: /csi/dr-csi.sock
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 3
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/log
              name: log
            - mountPath: /etc/localtime
              name: host-time
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 128Mi
      volumes:
        - emptyDir: null
          name: socket-dir
        - hostPath:
            path: /var/log/
            type: Directory
          name: log
        - hostPath:
            path: /etc/localtime
            type: File
          name: host-time

---
apiVersion: v1
kind: Service
metadata:
  name: huawei-csi-controller
  namespace: huawei-csi
  labels:
    app: huawei-csi-controller
    provisioner: csi.huawei.com
spec:
  selector:
    app: huawei-csi-controller
  ports:
    - name: storage-backend-controller
      protocol: TCP
      port: 4433
      targetPort: 4433